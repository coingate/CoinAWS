name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.22]
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build the binary
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            GOOS=linux GOARCH=amd64 go build -o smeditor
          else
            GOOS=darwin GOARCH=amd64 go build -o smeditor
          fi

      - name: Create release assets
        id: create-release
        run: |
          mkdir -p release
          mv smeditor release/

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: smeditor-${{ matrix.os }}-${{ matrix.go-version }}
          path: release/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download release assets
        uses: actions/download-artifact@v4
        with:
          name: smeditor-${{ matrix.os }}-${{ matrix.go-version }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/smeditor
          asset_name: smeditor-${{ matrix.os }}-${{ matrix.go-version }}
          asset_content_type: application/octet-stream
